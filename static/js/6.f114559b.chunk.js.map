{"version":3,"sources":["containers/content/WorkPage/WorkPage.js","contentData/ContentData.js","contentData/ContentData.module.css","containers/ContactMe/ContactMe.js","containers/content/WorkPage/WorkPage.module.css"],"names":["WorkPage","useEffect","document","title","direction","in","mountOnEnter","unmountOnExit","container","className","Style","Row","md","xs","collg4","collg8","options","renderNode","INLINES","HYPERLINK","node","href","data","uri","target","rel","content","value","getData","a","fetch","method","headers","Authorization","body","JSON","stringify","query","then","response","json","errors","console","error","ProfDescription","useState","profDescription","setProfDescription","pageAboutmeCollection","items","professionalDescription","documentToReactComponents","ShortDescription","shortDescription","setShortDescription","OtherDescription","otherDescription","setOtherDescription","JobExperience","experience","setExperience","expanded","setExpanded","workExperienceCollection","job","map","index","onChange","panel","event","isExpanded","Card","CardText","variant","jobTitle","employer","startEndDate","description","module","exports","ContactMe","spacing","style","marginTop","item","textAlign","exact","to"],"mappings":"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","file":"static/js/6.f114559b.chunk.js","sourcesContent":["import { useEffect } from \"react\";\n\nimport Slide from \"@material-ui/core/Slide\";\n\nimport {\n  Grid\n} from \"@material-ui/core\";\n\nimport ContactMe from \"../../ContactMe/ContactMe\";\n\nimport { JobExperience } from '../../../contentData/ContentData'\n\nimport Style from \"./WorkPage.module.css\";\nconst WorkPage = () => {\n  useEffect(() => {\n    document.title = \"My Experience | Edward Ma, MStJ\";\n  }, []);\n\n  return (\n    <>\n      <Slide direction=\"up\" in={true} mountOnEnter unmountOnExit>\n        <Grid container className={Style.Row}>\n          <Grid md={4} xs={12} className={Style.collg4}>\n            <h1>Experience</h1>\n          </Grid>\n          <Grid md={8} xs={12} className={Style.collg8}>\n            <JobExperience />\n          </Grid>\n        </Grid>\n      </Slide>\n      <ContactMe />\n    </>\n  );\n};\n\nexport default WorkPage;\n","import { useEffect, useState } from \"react\";\nimport { INLINES } from \"@contentful/rich-text-types\";\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\n\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  CardContent,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\n\nimport Spinner from \"../components/UI/Spinner/Spinner\";\nimport Style from \"./ContentData.module.css\";\n// GraphQL Query\nconst query = `\n{\n  pageAboutmeCollection {\n    items {\n      shortDescription {\n        json\n      }\n      professionalDescription {\n        json\n      }\n      otherDescription {\n        json\n      }\n    }\n  }\n  workExperienceCollection {\n    items{\n      jobTitle\n      employer{\n        json\n      }\n      startEndDate\n      description{\n        json\n      }\n    }\n  }\n}`;\n\nconst contentSpaceID = process.env.REACT_APP_CONTENTFUL_SPACE;\nconst contentToken = process.env.REACT_APP_CONTENTFUL_DELIVERY_API;\n\nconst options = {\n  renderNode: {\n    [INLINES.HYPERLINK]: (node) => {\n      return (\n        <a href={node.data.uri} target=\"_blank\" rel=\"noopener noreferrer\">\n          {node.content[0].value}\n        </a>\n      );\n    },\n  },\n};\n\nconst getData = async () =>\n  await fetch(\n    `https://graphql.contentful.com/content/v1/spaces/` + contentSpaceID,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + contentToken,\n      },\n      body: JSON.stringify({ query }),\n    }\n  )\n    .then((response) => response.json())\n    .then(({ data, errors }) => {\n      if (errors) {\n        console.error(errors);\n      }\n      // rerender the entire component with new data\n      return data;\n    });\n\nexport const ProfDescription = () => {\n  const [profDescription, setProfDescription] = useState(null);\n  useEffect(() => {\n    getData().then((value) =>\n      setProfDescription(\n        value.pageAboutmeCollection.items[0].professionalDescription.json\n      )\n    );\n  }, []);\n  return <>{documentToReactComponents(profDescription, options)}</>;\n};\n\nexport const ShortDescription = () => {\n  const [shortDescription, setShortDescription] = useState(null);\n  useEffect(() => {\n    getData().then((value) =>\n      setShortDescription(\n        value.pageAboutmeCollection.items[0].shortDescription.json\n      )\n    );\n  }, []);\n  return <>{documentToReactComponents(shortDescription, options)}</>;\n};\n\nexport const OtherDescription = () => {\n  const [otherDescription, setOtherDescription] = useState(null);\n  useEffect(() => {\n    getData().then((value) =>\n      setOtherDescription(\n        value.pageAboutmeCollection.items[0].otherDescription.json\n      )\n    );\n  }, []);\n  return <>{documentToReactComponents(otherDescription, options)}</>;\n};\n\nexport const JobExperience = () => {\n  const [experience, setExperience] = useState(null);\n\n  const [expanded, setExpanded] = useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  useEffect(() => {\n    getData().then((value) =>\n      setExperience(value.workExperienceCollection.items)\n    );\n  }, []);\n\n  let job = <Spinner />;\n  if (experience !== null) {\n    job = experience.map((job, index) => (\n      <Grid container className={Style.Row}>\n        <Accordion\n          expanded={expanded === index}\n          onChange={handleChange(index)}\n          className={Style.Card}\n        >\n          <AccordionSummary>\n            <CardContent className={Style.CardText}>\n              <Typography variant=\"h6\">{job.jobTitle}</Typography>\n              <Typography variant=\"subtitle1\">\n                {documentToReactComponents(job.employer.json, options)}\n              </Typography>\n              <Typography variant=\"subtitle1\">{job.startEndDate}</Typography>\n            </CardContent>\n          </AccordionSummary>\n          <AccordionDetails>\n            <CardContent className={Style.CardText}>\n              {documentToReactComponents(job.description.json, options)}\n            </CardContent>\n          </AccordionDetails>\n        </Accordion>\n      </Grid>\n    ));\n  }\n  return job;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"ContentData_Row__1URNK\",\"CardText\":\"ContentData_CardText__12Am1\",\"Accordion\":\"ContentData_Accordion__CCM-g\",\"card\":\"ContentData_card__2bF6o\",\"Card\":\"ContentData_Card__s-Zoa\"};","import { Grid } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ContactMe = () => (\n  <>\n    <Grid container spacing={5} style={{ marginTop: 150 }}>\n      <Grid item xs={12} style={{ textAlign: \"center\" }}>\n        <h4>\n          I’m always keeping an eye out for opportunities and collaborations!\n        </h4>\n        <h4>\n          <NavLink exact to=\"/contact\">Drop me a line</NavLink> if you’d like to chat.\n        </h4>\n      </Grid>\n    </Grid>\n  </>\n);\n\nexport default ContactMe;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"WorkPage_Row__1Uthu\",\"collg8\":\"WorkPage_collg8__2YBg2\",\"collg4\":\"WorkPage_collg4__2AKhf\"};"],"sourceRoot":""}